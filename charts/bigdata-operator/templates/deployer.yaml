{{- if .Values.rbac.createDeployer }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bigdata-deployer
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.rbac.useHelmHooks }}
    helm.sh/hook: pre-install
    helm.sh/resource-policy: keep
    {{- /* Delete the previous resource before a new hook is launched */}}
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "1"
    {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: bigdata-deployer-system-admin
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.rbac.useHelmHooks }}
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/resource-policy: keep
    {{- /* Delete the previous resource before a new hook is launched */}}
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
    {{- end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: bigdata-deployer
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: bigdata-deployer-cluster-manager
  annotations:
    {{- if .Values.rbac.useHelmHooks }}
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/resource-policy: keep
    {{- /* Delete the previous resource before a new hook is launched */}}
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
    {{- end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: bigdata-cluster-manager
subjects:
  - kind: ServiceAccount
    name: bigdata-deployer
    namespace: {{ .Release.Namespace }}
---
{{- if .Values.rbac.allowRoleEscalation }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: bigdata-deployer-cluster-manager-role-escalator
  annotations:
    {{- if .Values.rbac.useHelmHooks }}
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/resource-policy: keep
    {{- /* Delete the previous resource before a new hook is launched */}}
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "1"
    {{- end }}
rules:
    # Used in automatic upgrades
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["clusterroles"]
    resourceNames:
      - "bigdata-cluster-manager"
    verbs: ["escalate"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: bigdata-deployer-cluster-manager-role-escalator
  annotations:
    {{- if .Values.rbac.useHelmHooks }}
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/resource-policy: keep
    {{- /* Delete the previous resource before a new hook is launched */}}
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
    {{- end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: bigdata-deployer-cluster-manager-role-escalator
subjects:
  - kind: ServiceAccount
    name: bigdata-deployer
    namespace: {{ .Release.Namespace }}
{{- end }}
{{- end }}