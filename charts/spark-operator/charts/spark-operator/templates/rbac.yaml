{{- if or .Values.rbac.create .Values.rbac.createClusterRole }}
{{- /*
      Helm hook changes by OfAS:
      Added:
      - pre-upgrade
        - RBAC should be created/updated during upgrade process
      - post-upgrade
        - When upgrading from an old release that does not manage RBAC via hooks - with only the pre-upgrade hook specified - the following happens:
        - RBAC gets deleted, created, then deleted again
        - Hacky solution: Also create it in the post-upgrade step.
        - Since we have the before-hook-creation hook-delete-policy the object will be deleted and recreated if it already exists.

      Discarded alternative:
      - Don't manage RBAC via helm hooks
      - Don't run the webhook init job via helm hook - therefore we don't need to create the RBAC in a hook either.
      - However, the webhook cleanup job is run by a helm hook - deleting webhook certs on deletion and upgrades.
      - To make sure that the webhook init job runs on upgrades (even if the yaml was not changed), we set a short TTL-after-competion on the job.
      - This makes it go away, and be re-run on upgrades.
      - Discarded because the TTL controller was not enabled by default until k8s 1.21 (https://v1-20.docs.kubernetes.io/docs/concepts/workloads/controllers/ttlafterfinished/)
*/}}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "spark-operator.fullname" . }}
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade, post-upgrade
    "helm.sh/hook-delete-policy": hook-failed, before-hook-creation
  labels:
    {{- include "spark-operator.labels" . | nindent 4 }}
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - "*"
- apiGroups:
  - ""
  resources:
  - services
  - configmaps
  - secrets
  verbs:
  - create
  - get
  - delete
  - update
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - get
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - resourcequotas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - update
  - delete
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - create
  - get
  - update
  - delete
- apiGroups:
  - sparkoperator.k8s.io
  resources:
  - sparkapplications
  - sparkapplications/status
  - scheduledsparkapplications
  - scheduledsparkapplications/status
  verbs:
  - "*"
  {{- if .Values.batchScheduler.enable }}
  # required for the `volcano` batch scheduler
- apiGroups:
  - scheduling.incubator.k8s.io
  - scheduling.sigs.dev
  - scheduling.volcano.sh
  resources:
  - podgroups
  verbs:
  - "*"
  {{- end }}
  {{ if .Values.webhook.enable }}
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - delete
  {{- end }}

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "spark-operator.fullname" . }}
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade, post-upgrade
    "helm.sh/hook-delete-policy": hook-failed, before-hook-creation
  labels:
    {{- include "spark-operator.labels" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ include "spark-operator.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ include "spark-operator.fullname" . }}
  apiGroup: rbac.authorization.k8s.io
{{- end }}
