apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bigdata-spark-watcher.fullname" . }}
  labels:
    {{- include "bigdata-spark-watcher.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "bigdata-spark-watcher.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bigdata-spark-watcher.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bigdata-spark-watcher.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: manager
          args:
          - --leader-elect
          {{- if .Values.k8sEventLogCollectorEnabled }}
          - --enable-k8s-event-log-collector
          {{- end }}
          - --metrics-bind-address
          - ":8080"
          - --watch-label
          - "{{ .Values.saWatchLabel }}"
          - --log-level
          - "{{ .Values.logLevel }}"
          {{- if .Values.replicaTagger.enabled }}
          - --enable-replica-tagger
          - --replica-count
          - "{{ .Values.replicaTagger.replicaCount }}"
          {{- end }}
          {{- if .Values.ghostSyncerEnabled }}
          - --enable-ghost-syncer
          {{- end }}
          {{- if .Values.killSyncerEnabled }}
          - --enable-kill-syncer
          {{- end }}
          ports:
          - name: metrics
            containerPort: 8080
            protocol: TCP
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SPOTINST_BASE_URL
              value: {{ .Values.spotBaseUrl }}
            - name: APP_SYNC_PERIOD
              value: {{ .Values.appSyncPeriod }}
            - name: APP_SYNC_KILL_GRACE_PERIOD
              value: {{ .Values.appSyncKillGracePeriod }}
            - name: APP_SYNC_GHOST_GRACE_PERIOD
              value: {{ .Values.appSyncKillGhostGracePeriod }}
            - name: APP_SYNC_REVERSE_GHOST_GRACE_PERIOD
              value: {{ .Values.appSyncReverseGhostGracePeriod }}
            - name: KUBE_EVENT_LOG_COLLECTION_BUCKET_PREFIX
              value: {{ .Values.k8sEventLogCollector.bucketPrefix }}
            - name: KUBE_EVENT_LOG_COLLECTION_ENVIRONMENT
              value: {{ .Values.k8sEventLogCollector.environment }}
            {{- if or .Values.stuckAppCleanupEnabled .Values.stuckDriverCleanupEnabled }}
            - name: WATCHER_STUCK_SPARK_APP_CLEANUP_ENABLED
              value: {{ .Values.stuckAppCleanupEnabled | quote }}
            - name: WATCHER_STUCK_DRIVER_CLEANUP_ENABLED
              value: {{ .Values.stuckDriverCleanupEnabled | quote }}
            {{- with .Values.stuckCleanup }}
            - name: WATCHER_STUCK_TTL
              value: {{ .gracePeriod }}
            - name: WATCHER_STUCK_TTL_LEEWAY
              value: {{ .leeway }}
            - name: WATCHER_STUCK_CHECK_FREQUENCY
              value: {{ .period }}
            {{- end }}
            {{- end }}
            - name: AWS_CREDENTIALS_FILE
              value: /creds/aws
            - name: GCP_CREDENTIALS_FILE
              value: /creds/gcp
            - name: AZURE_CREDENTIALS_FILE
              value: /creds/azure
            - name: CREDS_REFRESH_INTERVAL
              value: 2m
            - name: SPARK_APP_FAILED_EXECUTOR_LIMIT
              value: {{ .Values.sparkAppFailedExecutorLimit | quote }}
            - name: SPARK_APP_TERMINATED_CRITICAL_SIDECAR_GRACE_PERIOD
              value: {{ .Values.sparkAppTerminatedCriticalSidecarGracePeriod }}
            - name: HTTP_PROXY
              valueFrom:
                configMapKeyRef:
                  name: spot-ofas-cluster-info
                  key: proxyUrl
                  optional: true
            - name: HTTPS_PROXY
              valueFrom:
                configMapKeyRef:
                  name: spot-ofas-cluster-info
                  key: proxyUrl
                  optional: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.k8sEventLogCollectorEnabled }}
          volumeMounts:
            - name: spot-bigdata-log-collector-creds
              mountPath: /creds
              readOnly: true
          {{- end }}
    {{- if .Values.telemetry.enabled }}
        - name: fluentbit
          image: "{{ .Values.telemetry.fluentbit.image.repository }}:{{ .Values.telemetry.fluentbit.image.tag }}"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          ports:
            - name: http
              containerPort: 2020
              protocol: TCP
          env:
            - name: AWS_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: spot-bigdata-telemetry-creds
                  key: AWS_BUCKET_NAME
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: spot-bigdata-telemetry-creds
                  key: AWS_REGION
            - name: CLUSTER_ID
              valueFrom:
                configMapKeyRef:
                  name: spot-ofas-cluster-info
                  key: clusterId
            - name: ACCOUNT_ID
              valueFrom:
                configMapKeyRef:
                  name: spot-ofas-cluster-info
                  key: accountId
            - name: HTTP_PROXY
              valueFrom:
                configMapKeyRef:
                  name: spot-ofas-cluster-info
                  key: proxyUrl
                  optional: true
            - name: HTTPS_PROXY
              valueFrom:
                configMapKeyRef:
                  name: spot-ofas-cluster-info
                  key: proxyUrl
                  optional: true
          resources: {}
          volumeMounts:
            - name: telementry-global-config
              mountPath: /opt/bitnami/fluent-bit/conf/fluent-bit.conf
              subPath: fluent-bit.conf
            - name: telementry-custom-config
              mountPath: /opt/bitnami/fluent-bit/conf/custom-filters.conf
              subPath: custom-filters.conf
            - name: telementry-global-config
              mountPath: /opt/bitnami/fluent-bit/conf/parsers.conf
              subPath: parsers.conf
            - name: telementry-custom-config
              mountPath: /opt/bitnami/fluent-bit/conf/metrics-collection.conf
              subPath: metrics-collection.conf
            - name: varlog
              readOnly: true
              mountPath: /var/log/
            - name: varlibdockercontainers
              readOnly: true
              mountPath: /var/lib/docker/containers
            - name: telemetry-aws-credentials
              mountPath: /.aws
    {{- end }}
      {{- if or .Values.telemetry.enabled .Values.k8sEventLogCollectorEnabled }}
      volumes:
      {{- if .Values.k8sEventLogCollectorEnabled }}
        - name: spot-bigdata-log-collector-creds
          secret:
            secretName: spot-bigdata-log-collector-creds
      {{- end }}
      {{- if .Values.telemetry.enabled }}
        - name: telementry-global-config
          configMap:
            name: bigdata-common-telemetry-fluentbit-cm
        - name: telementry-custom-config
          configMap:
            name: {{ include "bigdata-spark-watcher.fullname" . }}-telemetry-cm
        - name: varlog
          hostPath:
            path: /var/log/
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: telemetry-aws-credentials
          secret:
            secretName: spot-bigdata-telemetry-creds
      {{- end }}
      {{- else }}
      volumes: []
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
